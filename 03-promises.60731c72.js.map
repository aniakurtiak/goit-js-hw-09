{"mappings":"AAqCA,SAASA,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIC,iBACJ,MAAMC,EAAW,IAAIC,SAASH,EAAII,QAC5BC,EAAaC,OAAOJ,EAASK,IAAI,UACjCC,EAAOF,OAAOJ,EAASK,IAAI,SAC3BE,EAASH,OAAOJ,EAASK,IAAI,WAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BvB,EAAcuB,EAAGL,GACdM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,MAAU,IAE7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,MAAU,IAE7DgB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["\n// function createPromise(position, delay) {\n//   return new Promise((res, rej) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         res({ position, delay });\n//       } else {\n//         rej({ position, delay });\n//       }\n//     }, delay);\n//   })\n// };\n\n// const form = document.querySelector('.form');\n// form.addEventListener('submit', handlerSubmit);\n// function handlerSubmit(evt) {\n//   evt.preventDefault();\n//   const formData = new FormData(evt.target);\n//     const firstDelay = Number(formData.get(\"delay\"));\n//     const step = Number(formData.get(\"step\"));\n//     const amount = Number(formData.get(\"amount\"));\n\n//     for (let i = 1; i <= amount; i+=1) {\n//       createPromise(i, firstDelay)\n//         .then(\n//         ({ position, delay }) => {\n//           console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         })\n//         .catch(({ position, delay }) => {\n//           console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//         }\n//       );\n//       firstDelay += step;\n//     }\n//   };\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  const form = document.querySelector(\".form\");\n  form.addEventListener(\"submit\", handlerSubmit);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const formData = new FormData(evt.target);\n    const firstDelay = Number(formData.get(\"delay\"));\n    const step = Number(formData.get(\"step\"));\n    const amount = Number(formData.get(\"amount\"));\n\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, firstDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      firstDelay += step;\n    }\n  }"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","formData","FormData","target","firstDelay","Number","get","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.60731c72.js.map"}